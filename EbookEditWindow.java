package com.company;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;

/**
 *
 * @author randkill
 */
public class EbookEditWindow extends javax.swing.JFrame {
    private String Address = null;

    public void setAddress(String address) {
        Address = address;
    }
    private String Name;        //Ebook class atributes
    private EbookType Type;
    private String Descriptions;
    private int Size;
    private int CDay;        //date class atributes
    private int CMonth;
    private int CYear;
    private int MDay;        //date class atributes
    private int MMonth;
    private int MYear;
    private int Pages;
    private String Domain;
    private String AuthorName;
    private String AuthorGenre;
    private String AuthorGender;
    private int AuthorAge;
    private int combo;
    public void readFile(String directory)
    {
    Address = directory;
        FileEditReader readF = new FileEditReader(Address , 18);
        this.Name = readF.readline(2);
        fileNameTextfield.setText(Name);
        this.Descriptions = readF.readline(11);
        descriptionTextField.setText(Descriptions);
        this.Address = readF.readline(5);
        directoryTextField.setText(Address);
        this.Size = Integer.parseInt(readF.readline(4));
        fielSizeTextfield.setText(new Integer(Size).toString());
        this.CYear = Integer.parseInt(readF.readline(6));
        creationYearTextfield.setText(new Integer(CYear).toString());
        this.CMonth= Integer.parseInt(readF.readline(7));
        creationMonthTextfield.setText(new Integer(CMonth).toString());
        this.CDay= Integer.parseInt(readF.readline(8));
        creationDayTextfield.setText(new Integer(CDay).toString());
        this.MYear= Integer.parseInt(readF.readline(9));
        managedYearTextfield.setText(new Integer(MYear).toString());
        this.MMonth= Integer.parseInt(readF.readline(10));
        managedMonthTextfield.setText(new Integer(MMonth).toString());
        this.MDay= Integer.parseInt(readF.readline(11));
        managedDayTextfield.setText(new Integer(MDay).toString());
        this.Pages = Integer.parseInt(readF.readline(12));
        pagesTextfield.setText(new Integer(Pages).toString());
        this.Domain = readF.readline(13);
        this.Descriptions = readF.readline(18);
        this.AuthorName=readF.readline(14);
        authorNameTextfield.setText(AuthorName);
        this.AuthorGender = readF.readline(15);
        authorGenderTextfield.setText(AuthorGender);
        this.AuthorGenre = readF.readline(16);
        authorGenreTextfield.setText(AuthorGenre);
        this.AuthorAge = Integer.parseInt(readF.readline(17));
        String tp;
        tp = readF.readline(3);
        if (tp == "html") {
            Type = EbookType.HTML;
            combo = 0;
        }
        else if (tp == "ibooks") {
            Type = EbookType.IBOOKS;
            combo = 1;
        }
        else if (tp == "doc") {
            Type = EbookType.DOC;
            combo = 2;
        }
        else if (tp == "prc") {
            Type = EbookType.PRC;
            combo = 3;
        }
        else if (tp == "docx") {
            Type = EbookType.DOCX;
            combo = 4;
        }
        else if (tp == "epub") {
            Type = EbookType.EPUB;
            combo = 5;
        }
        else if (tp == "pdb") {
            Type = EbookType.PDB;
            combo = 6;
        }
        else if (tp == "fb2") {
            Type = EbookType.FB2;
            combo = 7;
        }
        else if (tp == "xeb") {
            Type = EbookType.XEB;
            combo = 8;
        }
        else if (tp == "ceb") {
            Type = EbookType.CEB;
            combo = 9;
        }
        else if (tp == "opf") {
            Type = EbookType.OPF;
            combo = 10;
        }
        else if (tp == "pdf") {
            Type = EbookType.PDF;
            combo = 11;
        }
        else if (tp == "txt") {
            Type = EbookType.TXT;
            combo = 12;
        }
        else if (tp == "pdg") {
            Type = EbookType.PDG;
            combo = 13;
        }
        else if (tp == "xml") {
            Type = EbookType.XML;
            combo = 14;
        }
        fileFormatComboBox.setSelectedIndex(combo);
    }

    /**
     * Creates new form Ebook
     */
    public EbookEditWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        fileNameLabel = new javax.swing.JLabel();
        fileFormatLabel = new javax.swing.JLabel();
        fileSizeLabel = new javax.swing.JLabel();
        fileNameTextfield = new javax.swing.JTextField();
        fielSizeTextfield = new javax.swing.JTextField();
        mbLabel = new javax.swing.JLabel();
        fileFormatComboBox = new javax.swing.JComboBox<>();
        creationDateLabel = new javax.swing.JLabel();
        managedDateLabel = new javax.swing.JLabel();
        creationYearTextfield = new javax.swing.JTextField();
        managedYearTextfield = new javax.swing.JTextField();
        managedMonthTextfield = new javax.swing.JTextField();
        creationMonthTextfield = new javax.swing.JTextField();
        creationDayTextfield = new javax.swing.JTextField();
        managedDayTextfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pagesLabel = new javax.swing.JLabel();
        pagesTextfield = new javax.swing.JTextField();
        domainLabel = new javax.swing.JLabel();
        domainTextfield = new javax.swing.JTextField();
        nextButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        authorDataLabel = new javax.swing.JLabel();
        authorNameLabel = new javax.swing.JLabel();
        authorAgeLabel = new javax.swing.JLabel();
        authorGenderLabel = new javax.swing.JLabel();
        authorGenreLabel = new javax.swing.JLabel();
        authorNameTextfield = new javax.swing.JTextField();
        authorAgeTextfield = new javax.swing.JTextField();
        authorGenderTextfield = new javax.swing.JTextField();
        authorGenreTextfield = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        selectFileLabel = new javax.swing.JLabel();
        selectFileBUtton = new javax.swing.JButton();
        directoryTextField = new javax.swing.JTextField();
        descriptionTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeLabel.setText("Enter data of your Ebook file :");

        fileNameLabel.setText("file name :");

        fileFormatLabel.setText("file format :");

        fileSizeLabel.setText("file size :");

        fileNameTextfield.setText("name");
        fileNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextfieldActionPerformed(evt);
            }
        });

        fielSizeTextfield.setText("size");
        fielSizeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fielSizeTextfieldActionPerformed(evt);
            }
        });

        mbLabel.setText("mb");

        fileFormatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "html", "ibooks", "doc", "prc", "docx", "epub", "pdb", "fb2", "xeb", "ceb", "opf", "pdf", "txt", "pdg", "xml" }));
        fileFormatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileFormatComboBoxActionPerformed(evt);
            }
        });

        creationDateLabel.setText("creation date :");

        managedDateLabel.setText("managed date :");

        creationYearTextfield.setText("year");
        creationYearTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationYearTextfieldActionPerformed(evt);
            }
        });

        managedYearTextfield.setText("year");
        managedYearTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedYearTextfieldActionPerformed(evt);
            }
        });

        managedMonthTextfield.setText("month");
        managedMonthTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedMonthTextfieldActionPerformed(evt);
            }
        });

        creationMonthTextfield.setText("month");
        creationMonthTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationMonthTextfieldActionPerformed(evt);
            }
        });

        creationDayTextfield.setText("day");
        creationDayTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationDayTextfieldActionPerformed(evt);
            }
        });

        managedDayTextfield.setText("day");
        managedDayTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedDayTextfieldActionPerformed(evt);
            }
        });

        jLabel8.setText("/");

        jLabel9.setText("/");

        jLabel10.setText("/");

        jLabel11.setText("/");

        pagesLabel.setText("pages :");

        pagesTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagesTextfieldActionPerformed(evt);
            }
        });

        domainLabel.setText("domain :");

        domainTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainTextfieldActionPerformed(evt);
            }
        });

        nextButton.setText("next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        authorDataLabel.setText("author data :");

        authorNameLabel.setText("author name :");

        authorAgeLabel.setText("author age :");

        authorGenderLabel.setText("author gender :");

        authorGenreLabel.setText("author genre :");

        authorNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorNameTextfieldActionPerformed(evt);
            }
        });

        authorAgeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorAgeTextfieldActionPerformed(evt);
            }
        });

        authorGenderTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorGenderTextfieldActionPerformed(evt);
            }
        });

        authorGenreTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorGenreTextfieldActionPerformed(evt);
            }
        });

        descriptionLabel.setText("description :");

        selectFileLabel.setText("select file otherwise enter directory :");

        selectFileBUtton.setText("select file");
        selectFileBUtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileBUttonActionPerformed(evt);
            }
        });

        directoryTextField.setText("directory ");
        directoryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryTextFieldActionPerformed(evt);
            }
        });

        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(backButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(welcomeLabel)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(fileNameLabel)
                                                                                        .addComponent(fileSizeLabel)
                                                                                        .addComponent(fileFormatLabel))
                                                                                .addGap(36, 36, 36)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(fileFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(fielSizeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addGap(9, 9, 9)
                                                                                                .addComponent(mbLabel))
                                                                                        .addComponent(fileNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                        .addComponent(authorDataLabel)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(authorNameLabel)
                                                                                        .addComponent(authorAgeLabel)
                                                                                        .addComponent(authorGenderLabel)
                                                                                        .addComponent(authorGenreLabel))
                                                                                .addGap(22, 22, 22)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(authorNameTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                                                                        .addComponent(authorAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(authorGenderTextfield)
                                                                                        .addComponent(authorGenreTextfield))))
                                                                .addGap(37, 37, 37)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(descriptionLabel)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(creationDateLabel)
                                                                                                .addGap(31, 31, 31)
                                                                                                .addComponent(creationYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(managedDateLabel)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                                .addComponent(managedYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(managedMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLabel10))
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(creationMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(creationDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(managedDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addComponent(pagesLabel)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(pagesTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(domainLabel)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(domainTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(selectFileLabel)
                                                                        .addComponent(selectFileBUtton)
                                                                        .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(descriptionTextField))))
                                                .addGap(0, 36, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(welcomeLabel)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileNameLabel)
                                        .addComponent(fileNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(creationDateLabel)
                                        .addComponent(creationYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(creationMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(creationDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileSizeLabel)
                                        .addComponent(fielSizeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(mbLabel)
                                        .addComponent(managedDateLabel)
                                        .addComponent(managedYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(managedMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(managedDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileFormatLabel)
                                        .addComponent(fileFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pagesLabel)
                                        .addComponent(pagesTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(domainLabel)
                                        .addComponent(domainTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorDataLabel)
                                        .addComponent(descriptionLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorNameLabel)
                                        .addComponent(authorNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorAgeLabel)
                                        .addComponent(authorAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorGenderLabel)
                                        .addComponent(authorGenderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectFileLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorGenreLabel)
                                        .addComponent(authorGenreTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectFileBUtton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nextButton)
                                        .addComponent(backButton))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void fileNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        fileNameTextfield.getText();
        Name = fileNameTextfield.getText();
    }

    private void creationYearTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationDayTextfield.getText();
        CYear = Integer.parseInt(creationDayTextfield.getText());
        if(CYear>=1900 && CYear<=3000)
        {
            this.CYear = CYear;
        }
        else
        {
            CYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            creationDayTextfield.setText("year");
        }
    }

    private void directoryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        directoryTextField.getText();
        Address = directoryTextField.getText();
    }

    private void authorGenderTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        authorGenderTextfield.getText();
        AuthorGender = authorGenderTextfield.getText();
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
    }

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (fileFormatComboBox.getSelectedIndex() == 0) {
            Type = EbookType.HTML;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 1) {
            Type = EbookType.IBOOKS;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 2) {
            Type = EbookType.DOC;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 3) {
            Type = EbookType.PRC;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 4) {
            Type = EbookType.DOCX;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 5) {
            Type = EbookType.EPUB;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 6) {
            Type = EbookType.PDB;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 7) {
            Type = EbookType.FB2;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 8) {
            Type = EbookType.XEB;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 9) {
            Type = EbookType.CEB;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 10) {
            Type = EbookType.OPF;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 11) {
            Type = EbookType.PDF;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 12) {
            Type = EbookType.TXT;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 13) {
            Type = EbookType.PDG;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 14) {
            Type = EbookType.XML;
        }
        fileNameTextfield.getText();
        Name = fileNameTextfield.getText();
        directoryTextField.getText();
        Address = directoryTextField.getText();
        authorGenderTextfield.getText();
        AuthorGender = authorGenderTextfield.getText();
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();
        authorNameTextfield.getText();
        AuthorName = authorNameTextfield.getText();
        authorGenreTextfield.getText();
        AuthorGenre = authorGenreTextfield.getText();
        domainTextfield.getText();
        Domain = domainTextfield.getText();
        try
        {
            creationDayTextfield.getText();
            CYear = Integer.parseInt(creationDayTextfield.getText());
            if(CYear>=1900 && CYear<=3000)
            {
                this.CYear = CYear;
            }
            else
            {
                CYear = 0;
                JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                creationDayTextfield.setText("year");
            }
            fielSizeTextfield.getText();
            Size = Integer.parseInt(fielSizeTextfield.getText());
            authorAgeTextfield.getText();
            AuthorAge = Integer.parseInt(authorAgeTextfield.getText());
            pagesTextfield.getText();
            Pages = Integer.parseInt(pagesTextfield.getText());
            creationMonthTextfield.getText();
            CMonth = Integer.parseInt(creationMonthTextfield.getText());
            if(CMonth>=1 && CMonth<=12)
            {
                this.CMonth = CMonth;
            }
            else
            {
                CMonth = 0;
                JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
                creationMonthTextfield.setText("month");
            }
            creationDayTextfield.getText();
            CDay = Integer.parseInt(creationDayTextfield.getText());
            if(CDay >=1 && CDay<=30)
            {
                this.CDay = CDay;
            }
            else
            {
                CDay = 0;
                JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
                creationDayTextfield.setText("day");
            }
            managedYearTextfield.getText();
            MYear = Integer.parseInt(managedYearTextfield.getText());
            if(MYear>=1900 && MYear<=3000)
            {
                this.MYear = MYear;
            }
            else
            {
                MYear = 0;
                JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                managedYearTextfield.setText("year");
            }
            managedMonthTextfield.getText();
            MMonth = Integer.parseInt(managedMonthTextfield.getText());
            if(MMonth>=1 && MMonth<=12)
            {
                this.MMonth = MMonth;
            }
            else
            {
                MMonth = 0;
                JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
                managedMonthTextfield.setText("month");
            }
            managedDayTextfield.getText();
            MDay = Integer.parseInt(managedDayTextfield.getText());
            if(MDay >=1 && MDay<=30)
            {
                this.MDay = MDay;
            }
            else
            {
                MDay = 0;
                JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
                managedDayTextfield.setText("day");
            }
            creatEbook();
            setVisible(false);
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null ,"please enter fields correctly !");
        }
    }

    private void selectFileBUttonActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("choose directory");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null ,"selected directory is : " + chooser.getSelectedFile());
            directoryTextField.setText(chooser.getSelectedFile().getAbsolutePath());
            Address = chooser.getSelectedFile().getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(null , "you chose no directory !!");
        }
    }

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();
    }

    private void fielSizeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        fielSizeTextfield.getText();
        Size = Integer.parseInt(fielSizeTextfield.getText());
    }

    private void fileFormatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {


        for(int i =0; i <= 14 ; i++) {
            if (fileFormatComboBox.getSelectedIndex() == 0) {
                Type = EbookType.HTML;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 1) {
                Type = EbookType.IBOOKS;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 2) {
                Type = EbookType.DOC;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 3) {
                Type = EbookType.PRC;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 4) {
                Type = EbookType.DOCX;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 5) {
                Type = EbookType.EPUB;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 6) {
                Type = EbookType.PDB;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 7) {
                Type = EbookType.FB2;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 8) {
                Type = EbookType.XEB;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 9) {
                Type = EbookType.CEB;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 10) {
                Type = EbookType.OPF;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 11) {
                Type = EbookType.PDF;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 12) {
                Type = EbookType.TXT;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 13) {
                Type = EbookType.PDG;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 14) {
                Type = EbookType.XML;
            }

        }




    }

    private void authorNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        authorNameTextfield.getText();
        AuthorName = authorNameTextfield.getText();
    }

    private void authorAgeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        authorAgeTextfield.getText();
        AuthorAge = Integer.parseInt(authorAgeTextfield.getText());
    }

    private void authorGenreTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        authorGenreTextfield.getText();
        AuthorGenre = authorGenreTextfield.getText();
    }

    private void pagesTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        pagesTextfield.getText();
        Pages = Integer.parseInt(pagesTextfield.getText());
    }

    private void domainTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        domainTextfield.getText();
        Domain = domainTextfield.getText();
    }

    private void creationMonthTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationMonthTextfield.getText();
        CMonth = Integer.parseInt(creationMonthTextfield.getText());
        if(CMonth>=1 && CMonth<=12)
        {
            this.CMonth = CMonth;
        }
        else
        {
            CMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            creationMonthTextfield.setText("month");
        }
    }

    private void creationDayTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationDayTextfield.getText();
        CDay = Integer.parseInt(creationDayTextfield.getText());
        if(CDay >=1 && CDay<=30)
        {
            this.CDay = CDay;
        }
        else
        {
            CDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            creationDayTextfield.setText("day");
        }
    }

    private void managedYearTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedYearTextfield.getText();
        MYear = Integer.parseInt(managedYearTextfield.getText());
        if(MYear>=1900 && MYear<=3000)
        {
            this.MYear = MYear;
        }
        else
        {
            MYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            managedYearTextfield.setText("year");
        }
    }

    private void managedMonthTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedMonthTextfield.getText();
        MMonth = Integer.parseInt(managedMonthTextfield.getText());
        if(MMonth>=1 && MMonth<=12)
        {
            this.MMonth = MMonth;
        }
        else
        {
            MMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            managedMonthTextfield.setText("month");
        }
    }

    private void managedDayTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedDayTextfield.getText();
        MDay = Integer.parseInt(managedDayTextfield.getText());
        if(MDay >=1 && MDay<=30)
        {
            this.MDay = MDay;
        }
        else
        {
            MDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            managedDayTextfield.setText("day");
        }
    }
    public boolean status()
    {
        return true;
    }
    private void creatEbook()
    {
        Date cDate= new Date(CDay , CMonth , CYear);
        Date mDate = new Date(MDay , MMonth , MYear);
        Author author = new Author(AuthorName , AuthorGender , AuthorGenre , AuthorAge);
        Ebook ebook = new Ebook(Name , Type , Descriptions , Address , Size , cDate , mDate
                , Pages , author , Domain);
        try {
            FileW creator = new FileW(ebook.toString(), Address+"/"+Name);
            creator.writeFile();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null , e);;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EbookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EbookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EbookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EbookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EbookWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel authorAgeLabel;
    private javax.swing.JTextField authorAgeTextfield;
    private javax.swing.JLabel authorDataLabel;
    private javax.swing.JLabel authorGenderLabel;
    private javax.swing.JTextField authorGenderTextfield;
    private javax.swing.JLabel authorGenreLabel;
    private javax.swing.JTextField authorGenreTextfield;
    private javax.swing.JLabel authorNameLabel;
    private javax.swing.JTextField authorNameTextfield;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel creationDateLabel;
    private javax.swing.JTextField creationDayTextfield;
    private javax.swing.JTextField creationMonthTextfield;
    private javax.swing.JTextField creationYearTextfield;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JTextField directoryTextField;
    private javax.swing.JLabel domainLabel;
    private javax.swing.JTextField domainTextfield;
    private javax.swing.JTextField fielSizeTextfield;
    private javax.swing.JComboBox<String> fileFormatComboBox;
    private javax.swing.JLabel fileFormatLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextfield;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel managedDateLabel;
    private javax.swing.JTextField managedDayTextfield;
    private javax.swing.JTextField managedMonthTextfield;
    private javax.swing.JTextField managedYearTextfield;
    private javax.swing.JLabel mbLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel pagesLabel;
    private javax.swing.JTextField pagesTextfield;
    private javax.swing.JButton selectFileBUtton;
    private javax.swing.JLabel selectFileLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration
}
