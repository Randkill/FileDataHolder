package com.company;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.File;
import javax.swing.*;
import javax.swing.JFileChooser;




/**
 *
 * @author randkill
 */
public class VideoWindow extends javax.swing.JFrame {

    private String Name;        //Video class atributes
    private VideoType Type;
    private String Descriptions;
    private String Address;
    private int Size;
    private int CDay;        //date class atributes
    private int CMonth;
    private int CYear;
    private int MDay;        //date class atributes
    private int MMonth;
    private int MYear;
    private int Duration;
    private int FrameRate;
    private Genre Genre;

    public void setAddress(String address) {
        Address = address;
    }

    /**
     * Creates new form VideoWindows
     */
    public VideoWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        fileNameLabel = new javax.swing.JLabel();
        fileSizeLabel = new javax.swing.JLabel();
        fileFormatLabel = new javax.swing.JLabel();
        jTextFieNameTextFieldld1 = new javax.swing.JTextField();
        fileSizeTextField = new javax.swing.JTextField();
        mbLabel = new javax.swing.JLabel();
        fileFormatComboBox = new javax.swing.JComboBox<>();
        creationDateLabel = new javax.swing.JLabel();
        managedDateLabel = new javax.swing.JLabel();
        creationYearTextField = new javax.swing.JTextField();
        managedYearTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        creationMonthTextField = new javax.swing.JTextField();
        managedMonthTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        durationTextField = new javax.swing.JTextField();
        genreLabel = new javax.swing.JLabel();
        genreComboBox = new javax.swing.JComboBox<>();
        frameRateLabel = new javax.swing.JLabel();
        frameRateTextField = new javax.swing.JTextField();
        creationDayTextField = new javax.swing.JTextField();
        managedDayTextField = new javax.swing.JTextField();
        nextButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        selectFileLabel = new javax.swing.JLabel();
        otherwiseLabel = new javax.swing.JLabel();
        selectFileButton3 = new javax.swing.JButton();
        directoryTextFieldield12 = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeLabel.setText("Enter data of your video file :");

        fileNameLabel.setText("file name :");

        fileSizeLabel.setText("file size :");

        fileFormatLabel.setText("file format :");

        jTextFieNameTextFieldld1.setText("name");
        jTextFieNameTextFieldld1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieNameTextFieldld1ActionPerformed(evt);
            }
        });

        fileSizeTextField.setText("size");
        fileSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSizeTextFieldActionPerformed(evt);
            }
        });

        mbLabel.setText("mb");

        fileFormatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mp4", "avi", "wmv", "mov", "gif", "asf", "flv" }));
        fileFormatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileFormatComboBoxActionPerformed(evt);
            }
        });

        creationDateLabel.setText("creation date :");

        managedDateLabel.setText("managed date :");

        creationYearTextField.setText("year");
        creationYearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationYearTextFieldActionPerformed(evt);
            }
        });

        managedYearTextField.setText("year");
        managedYearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedYearTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("/");

        jLabel9.setText("/");

        creationMonthTextField.setText("month");
        creationMonthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationMonthTextFieldActionPerformed(evt);
            }
        });

        managedMonthTextField.setText("month");
        managedMonthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedMonthTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("/");

        jLabel11.setText("/");

        durationLabel.setText("duration :");

        durationTextField.setText("seconds");
        durationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationTextFieldActionPerformed(evt);
            }
        });

        genreLabel.setText("genre :");

        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "action", "romance", "drama", "thriller", "comedy", "documantry", "sciencefiction" }));
        genreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreComboBoxActionPerformed(evt);
            }
        });

        frameRateLabel.setText("frame rate :");

        frameRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameRateTextFieldActionPerformed(evt);
            }
        });

        creationDayTextField.setText("day");
        creationDayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationDayTextFieldActionPerformed(evt);
            }
        });

        managedDayTextField.setText("day");
        managedDayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedDayTextFieldActionPerformed(evt);
            }
        });

        nextButton.setText("next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        selectFileLabel.setText("select file :");

        otherwiseLabel.setText("otherwise enter directory :");

        selectFileButton3.setText("select file");
        selectFileButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButton3ActionPerformed(evt);
            }
        });

        directoryTextFieldield12.setText("directory :");
        directoryTextFieldield12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryTextFieldield12ActionPerformed(evt);
            }
        });

        descriptionLabel.setText("");

        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(backButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addComponent(fileNameLabel)
                                                                                .addGap(44, 44, 44)
                                                                                .addComponent(jTextFieNameTextFieldld1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(welcomeLabel)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(fileSizeLabel)
                                                                                        .addComponent(fileFormatLabel)
                                                                                        .addComponent(selectFileLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addGap(35, 35, 35)
                                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                        .addComponent(fileFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                                .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                .addGap(18, 18, 18)
                                                                                                                .addComponent(mbLabel))
                                                                                                        .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                                .addComponent(selectFileButton3)
                                                                                                .addGap(58, 58, 58))))
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGap(5, 5, 5)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(directoryTextFieldield12)
                                                                                        .addComponent(otherwiseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                                                .addGap(44, 44, 44))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(genreLabel)
                                                                .addGap(149, 149, 149)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(descriptionTextField)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(frameRateLabel)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(frameRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(durationLabel)
                                                                                                .addGap(33, 33, 33)
                                                                                                .addComponent(durationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                        .addComponent(creationDateLabel)
                                                                                                        .addComponent(managedDateLabel))
                                                                                                .addGap(18, 18, 18)
                                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                                .addComponent(creationYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(jLabel8))
                                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                                .addComponent(managedYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(managedMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLabel11))
                                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                                .addComponent(creationMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(creationDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(managedDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                        .addComponent(descriptionLabel))
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(welcomeLabel)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(fileNameLabel)
                                                        .addComponent(jTextFieNameTextFieldld1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(creationDateLabel)
                                                .addComponent(creationYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8)
                                                .addComponent(creationMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10)
                                                .addComponent(creationDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileSizeLabel)
                                        .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(mbLabel)
                                        .addComponent(managedDateLabel)
                                        .addComponent(managedYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(managedMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)
                                        .addComponent(managedDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileFormatLabel)
                                        .addComponent(fileFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(durationLabel)
                                        .addComponent(durationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(genreLabel)
                                        .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(frameRateLabel)
                                        .addComponent(frameRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(descriptionLabel)
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(selectFileLabel)
                                        .addComponent(selectFileButton3)
                                        .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(otherwiseLabel)
                                .addGap(32, 32, 32)
                                .addComponent(directoryTextFieldield12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nextButton)
                                        .addComponent(backButton))
                                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>

    private void fileSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        fileSizeTextField.getText();
        Size = Integer.parseInt(fileSizeTextField.getText());
    }

    private void genreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
            if (genreComboBox.getSelectedIndex() == 0) {
                Genre = Genre.ACTION;
            }
            else if (genreComboBox.getSelectedIndex() == 1) {
                Genre = Genre.ROMANCE;
            }
            else if (genreComboBox.getSelectedIndex() == 2) {
                Genre = Genre.DRAMAA;
            }
            else if (genreComboBox.getSelectedIndex() == 3) {
                Genre = Genre.THRILLER;
            }
            else if (genreComboBox.getSelectedIndex() == 4) {
                Genre = Genre.COMEDY;
            }
            else if (genreComboBox.getSelectedIndex() == 5) {
                Genre = Genre.DOCUMANTRY;
            }
            else if (genreComboBox.getSelectedIndex() == 6) {
                Genre = Genre.SCIENCEFICTION;
            }


        JOptionPane.showMessageDialog(null , Genre);
    }

    private void selectFileButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("choose directory");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null ,"selected directory is : " + chooser.getSelectedFile());
            directoryTextFieldield12.setText(chooser.getSelectedFile().getAbsolutePath());
            Address = chooser.getSelectedFile().getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(null , "you chose no directory !!");
        }
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
    }

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (genreComboBox.getSelectedIndex() == 0) {
            Genre = Genre.ACTION;
        }
        else if (genreComboBox.getSelectedIndex() == 1) {
            Genre = Genre.ROMANCE;
        }
        else if (genreComboBox.getSelectedIndex() == 2) {
            Genre = Genre.DRAMAA;
        }
        else if (genreComboBox.getSelectedIndex() == 3) {
            Genre = Genre.THRILLER;
        }
        else if (genreComboBox.getSelectedIndex() == 4) {
            Genre = Genre.COMEDY;
        }
        else if (genreComboBox.getSelectedIndex() == 5) {
            Genre = Genre.DOCUMANTRY;
        }
        else if (genreComboBox.getSelectedIndex() == 6) {
            Genre = Genre.SCIENCEFICTION;
        }
        if (fileFormatComboBox.getSelectedIndex() == 0) {
            Type = VideoType.MP4;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 1) {
            Type = VideoType.AVI;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 2) {
            Type = VideoType.WMV;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 3) {
            Type = VideoType.MOV;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 4) {
            Type = VideoType.GIF;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 5) {
            Type = VideoType.ASF;
        }
        else if (fileFormatComboBox.getSelectedIndex() == 6) {
            Type = VideoType.FLV;
        }
        jTextFieNameTextFieldld1.getText();
        Name = jTextFieNameTextFieldld1.getText();
        directoryTextFieldield12.getText();
        Address = directoryTextFieldield12.getText();
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();
        try {
            fileSizeTextField.getText();
            Size = Integer.parseInt(fileSizeTextField.getText());
            creationYearTextField.getText();
            CYear = Integer.parseInt(creationYearTextField.getText());
            if(CYear>=1900 && CYear<=3000)
            {
                this.CYear = CYear;
            }
            else
            {
                CYear = 0;
                JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                creationYearTextField.setText("year");
            }
            creationMonthTextField.getText();
            CMonth = Integer.parseInt(creationMonthTextField.getText());
            if(CMonth>=1 && CMonth<=12)
            {
                this.CMonth = CMonth;
            }
            else
            {
                CMonth = 0;
                JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
                creationMonthTextField.setText("month");
            }
            creationDayTextField.getText();
            CDay = Integer.parseInt(creationDayTextField.getText());
            if(CDay >=1 && CDay<=30)
            {
                this.CDay = CDay;
            }
            else
            {
                CDay = 0;
                JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
                creationDayTextField.setText("day");
            }
            managedYearTextField.getText();
            MYear = Integer.parseInt(managedYearTextField.getText());
            if(MYear>=1900 && MYear<=3000)
            {
                this.MYear = MYear;
            }
            else
            {
                MYear = 0;
                JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                managedYearTextField.setText("year");
            }
            managedMonthTextField.getText();
            MMonth = Integer.parseInt(managedMonthTextField.getText());
            if(MMonth>=1 && MMonth<=12)
            {
                this.MMonth = MMonth;
            }
            else
            {
                MMonth = 0;
                JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
                managedMonthTextField.setText("month");
            }
            managedDayTextField.getText();
            MDay = Integer.parseInt(managedDayTextField.getText());
            if(MDay >=1 && MDay<=30)
            {
                this.MDay = MDay;
            }
            else
            {
                MDay = 0;
                JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
                managedDayTextField.setText("day");
            }
            durationTextField.getText();
            Duration = Integer.parseInt(durationTextField.getText());
            frameRateTextField.getText();
            FrameRate = Integer.parseInt(frameRateTextField.getText());
            creatVideo();
            setVisible(false);
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "enter fields correctly !");
        }
    }
    public boolean status()
    {
        return true;
    }

    private void jTextFieNameTextFieldld1ActionPerformed(java.awt.event.ActionEvent evt) {
        jTextFieNameTextFieldld1.getText();
        Name = jTextFieNameTextFieldld1.getText();
    }

    private void fileFormatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
            if (fileFormatComboBox.getSelectedIndex() == 0) {
                Type = VideoType.MP4;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 1) {
                Type = VideoType.AVI;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 2) {
                Type = VideoType.WMV;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 3) {
                Type = VideoType.MOV;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 4) {
                Type = VideoType.GIF;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 5) {
                Type = VideoType.ASF;
            }
            else if (fileFormatComboBox.getSelectedIndex() == 6) {
                Type = VideoType.FLV;
            }


        JOptionPane.showMessageDialog(null , Type);
    }

    private void directoryTextFieldield12ActionPerformed(java.awt.event.ActionEvent evt) {
        directoryTextFieldield12.getText();
        Address = directoryTextFieldield12.getText();
    }

    private void creationYearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationYearTextField.getText();
        CYear = Integer.parseInt(creationYearTextField.getText());
        if(CYear>=1900 && CYear<=3000)
        {
            this.CYear = CYear;
        }
        else
        {
            CYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            creationYearTextField.setText("year");
        }
    }

    private void creationMonthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationMonthTextField.getText();
        CMonth = Integer.parseInt(creationMonthTextField.getText());
        if(CMonth>=1 && CMonth<=12)
        {
            this.CMonth = CMonth;
        }
        else
        {
            CMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            creationMonthTextField.setText("month");
        }
    }

    private void creationDayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationDayTextField.getText();
        CDay = Integer.parseInt(creationDayTextField.getText());
        if(CDay >=1 && CDay<=30)
        {
            this.CDay = CDay;
        }
        else
        {
            CDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            creationDayTextField.setText("day");
        }
    }

    private void managedYearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedYearTextField.getText();
        MYear = Integer.parseInt(managedYearTextField.getText());
        if(MYear>=1900 && MYear<=3000)
        {
            this.MYear = MYear;
        }
        else
        {
            MYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            managedYearTextField.setText("year");
        }
    }

    private void managedMonthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedMonthTextField.getText();
        MMonth = Integer.parseInt(managedMonthTextField.getText());
        if(MMonth>=1 && MMonth<=12)
        {
            this.MMonth = MMonth;
        }
        else
        {
            MMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            managedMonthTextField.setText("month");
        }
    }

    private void managedDayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedDayTextField.getText();
        MDay = Integer.parseInt(managedDayTextField.getText());
        if(MDay >=1 && MDay<=30)
        {
            this.MDay = MDay;
        }
        else
        {
            MDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            managedDayTextField.setText("day");
        }
    }

    private void durationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        durationTextField.getText();
        Duration = Integer.parseInt(durationTextField.getText());
    }

    private void frameRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        frameRateTextField.getText();
        FrameRate = Integer.parseInt(frameRateTextField.getText());
    }

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();
    }


    private void creatVideo()
    {
        Date cDate = new Date(CDay , CMonth , CYear);
        Date mDate = new Date(MDay , MMonth , MYear);
        Video video = new Video( Name,  Type,  Descriptions,  Address,  Size
                ,  cDate,  mDate , Duration , Genre , FrameRate );
        try {
            FileW creator = new FileW(video.toString(), Address+"/"+Name);
            creator.writeFile();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null , e);;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VideoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VideoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VideoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VideoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VideoWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton backButton;
    private javax.swing.JLabel creationDateLabel;
    private javax.swing.JTextField creationDayTextField;
    private javax.swing.JTextField creationMonthTextField;
    private javax.swing.JTextField creationYearTextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JTextField directoryTextFieldield12;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JTextField durationTextField;
    private javax.swing.JComboBox<String> fileFormatComboBox;
    private javax.swing.JLabel fileFormatLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JTextField fileSizeTextField;
    private javax.swing.JLabel frameRateLabel;
    private javax.swing.JTextField frameRateTextField;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieNameTextFieldld1;
    private javax.swing.JLabel managedDateLabel;
    private javax.swing.JTextField managedDayTextField;
    private javax.swing.JTextField managedMonthTextField;
    private javax.swing.JTextField managedYearTextField;
    private javax.swing.JLabel mbLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel otherwiseLabel;
    private javax.swing.JButton selectFileButton3;
    private javax.swing.JLabel selectFileLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration
}
