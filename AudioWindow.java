package com.company;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.File;
import javax.swing.*;
import javax.swing.JFileChooser;
/**
 *
 * @author randkill
 */
public class AudioWindow extends javax.swing.JFrame {


    private String Name;        //photo class atributes
    private String Descriptions;
    private String Address;
    private int Size;
    private int Duration;
    private Date Date1 = new Date();
    private Date Date2 = new Date();
    private Artist Artist = new Artist();
    private int CDay;        //date class atributes
    private int CMonth;
    private int CYear;
    private int MDay;        //date class atributes
    private int MMonth;
    private int MYear;
    private String Artistname;
    private int Artistage;
    private String Artistgender;
    private String Artistgenre;
    private AudioType audioType;

    public void setAddress(String address) {
        Address = address;
    }

    /**
     * Creates new form AudioWindow
     */
    public AudioWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        fileNameLabel = new javax.swing.JLabel();
        fileSizeLabel = new javax.swing.JLabel();
        fileFormatLabel = new javax.swing.JLabel();
        fileSizeTextfield = new javax.swing.JTextField();
        formatComboBox = new javax.swing.JComboBox<>();
        creationDateLabel = new javax.swing.JLabel();
        managedDateLabel = new javax.swing.JLabel();
        creationYearTextfield = new javax.swing.JTextField();
        managedYearTextfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        creationMonthTextfield = new javax.swing.JTextField();
        managedMonthTextfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        creationDayTextfield = new javax.swing.JTextField();
        managedDayTextfield = new javax.swing.JTextField();
        selectFileLabel = new javax.swing.JLabel();
        otherwiseLabel = new javax.swing.JLabel();
        selectFileButton = new javax.swing.JButton();
        mbsLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        audioDurationLabel = new javax.swing.JLabel();
        audioDUrationTextfield = new javax.swing.JTextField();
        artistDataLabel = new javax.swing.JLabel();
        artistNameLabel = new javax.swing.JLabel();
        artistGenderLabel = new javax.swing.JLabel();
        artistAgeLabel = new javax.swing.JLabel();
        artistGenreLabel = new javax.swing.JLabel();
        artistNameTextField = new javax.swing.JTextField();
        artistAgeTextfield = new javax.swing.JTextField();
        artistGenderTextfield = new javax.swing.JTextField();
        artistGenreTextfield = new javax.swing.JTextField();
        fileNameTextfield = new javax.swing.JTextField();
        directoryTextfield = new javax.swing.JTextField();
        nextButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        descriptionTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeLabel.setText("Enter data of your audio file :");

        fileNameLabel.setText("file name :");

        fileSizeLabel.setText("file size :");

        fileFormatLabel.setText("file format :");

        fileSizeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSizeTextfieldActionPerformed(evt);
            }
        });

        formatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "m4a", "m4b", "m4p", "mp3", "mpc", "msv", "aac", "aax" }));
        formatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatComboBoxActionPerformed(evt);
            }
        });

        creationDateLabel.setText("creation date :");

        managedDateLabel.setText("managed date :");

        creationYearTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationYearTextfieldActionPerformed(evt);
            }
        });

        managedYearTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedYearTextfieldActionPerformed(evt);
            }
        });

        jLabel8.setText("/");

        jLabel9.setText("/");

        creationMonthTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationMonthTextfieldActionPerformed(evt);
            }
        });

        managedMonthTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedMonthTextfieldActionPerformed(evt);
            }
        });

        jLabel10.setText("/");

        jLabel11.setText("/");

        creationDayTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationDayTextfieldActionPerformed(evt);
            }
        });

        managedDayTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedDayTextfieldActionPerformed(evt);
            }
        });

        selectFileLabel.setText("select file :");

        otherwiseLabel.setText("otherwise enter directory :");

        selectFileButton.setText("select file");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        mbsLabel.setText("mbs");

        descriptionLabel.setText("discription :");

        audioDurationLabel.setText("audio duration :");

        audioDUrationTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audioDUrationTextfieldActionPerformed(evt);
            }
        });

        artistDataLabel.setText("artist data :");

        artistNameLabel.setText("artist name :");

        artistGenderLabel.setText("artist gender :");

        artistAgeLabel.setText("artist age :");

        artistGenreLabel.setText("artist genre :");

        artistNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistNameTextFieldActionPerformed(evt);
            }
        });

        artistAgeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistAgeTextfieldActionPerformed(evt);
            }
        });

        artistGenderTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistGenderTextfieldActionPerformed(evt);
            }
        });

        artistGenreTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistGenreTextfieldActionPerformed(evt);
            }
        });

        fileNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextfieldActionPerformed(evt);
            }
        });

        directoryTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryTextfieldActionPerformed(evt);
            }
        });

        nextButton.setText("next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(welcomeLabel)
                                                .addGap(52, 52, 52))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(artistNameLabel)
                                                                        .addComponent(artistDataLabel)
                                                                        .addComponent(artistAgeLabel))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(artistNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(artistAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(artistGenderLabel)
                                                                        .addComponent(artistGenreLabel))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(artistGenreTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                                        .addComponent(artistGenderTextfield))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(backButton)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addComponent(audioDurationLabel)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(audioDUrationTextfield))
                                                                        .addComponent(directoryTextfield)
                                                                        .addComponent(selectFileLabel)
                                                                        .addComponent(otherwiseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(50, 50, 50)))
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fileNameLabel)
                                                        .addComponent(fileSizeLabel)
                                                        .addComponent(fileFormatLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(mbsLabel))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                .addComponent(formatComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(fileSizeTextfield, javax.swing.GroupLayout.Alignment.LEADING))
                                                                        .addComponent(selectFileButton)
                                                                        .addComponent(fileNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(0, 97, Short.MAX_VALUE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(creationDateLabel)
                                                                .addComponent(managedDateLabel))
                                                        .addComponent(descriptionLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(creationYearTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                                        .addComponent(managedYearTextfield))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel8)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(creationMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel9)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(managedMonthTextfield)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(managedDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel10)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(creationDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(welcomeLabel)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileNameLabel)
                                        .addComponent(creationDateLabel)
                                        .addComponent(creationYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(creationMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(creationDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fileNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileSizeLabel)
                                        .addComponent(fileSizeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(managedDateLabel)
                                        .addComponent(managedYearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(managedMonthTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)
                                        .addComponent(managedDayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(mbsLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fileFormatLabel)
                                        .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(descriptionLabel))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(selectFileLabel)
                                        .addComponent(selectFileButton)
                                        .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(otherwiseLabel)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(directoryTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(audioDurationLabel)
                                                        .addComponent(audioDUrationTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(artistDataLabel)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(artistNameLabel)
                                                        .addComponent(artistNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(artistGenderLabel)
                                                        .addComponent(artistGenderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(artistGenreLabel)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(artistAgeLabel)
                                                                .addComponent(artistAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(artistGenreTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap(26, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(nextButton)
                                                        .addComponent(backButton))
                                                .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);

    }

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (formatComboBox.getSelectedIndex() == 0) {
            audioType = AudioType.M4A;
        }
        else if (formatComboBox.getSelectedIndex() == 1) {
            audioType = AudioType.M4B;
        }
        else if (formatComboBox.getSelectedIndex() == 2) {
            audioType = AudioType.M4P;
        }
        else if (formatComboBox.getSelectedIndex() == 3) {
            audioType = AudioType.MP3;
        }
        else if (formatComboBox.getSelectedIndex() == 4) {
            audioType = AudioType.MPC;
        }
        else if (formatComboBox.getSelectedIndex() == 5) {
            audioType = AudioType.MSV;
        }
        else if (formatComboBox.getSelectedIndex() == 6) {
            audioType = AudioType.AAC;
        }
        else if (formatComboBox.getSelectedIndex() == 7) {
            audioType = AudioType.AAX;
        }
        fileNameTextfield.getText();
        Name = fileNameTextfield.getText();
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();

        directoryTextfield.getText();
        Address = directoryTextfield.getText();
        artistNameTextField.getText();
        Artistname = artistNameTextField.getText();
        artistGenderTextfield.getText();
        Artistgender = artistGenderTextfield.getText();
        artistGenreTextfield.getText();
        Artistgenre = artistGenreTextfield.getText();
        try {
            fileSizeTextfield.getText();
            Size = Integer.parseInt(fileSizeTextfield.getText());

            creationYearTextfield.getText();
            CYear = Integer.parseInt(creationYearTextfield.getText());
            if (CYear >= 1900 && CYear <= 3000) {
                this.CYear = CYear;
            } else {
                CYear = 0;
                JOptionPane.showMessageDialog(null, "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                creationYearTextfield.setText("");
            }
            creationMonthTextfield.getText();
            CMonth = Integer.parseInt(creationMonthTextfield.getText());
            if (CMonth >= 1 && CMonth <= 12) {
                this.CMonth = CMonth;
            } else {
                CMonth = 0;
                JOptionPane.showMessageDialog(null, "month must be between 1 and 12 , \n recorrect your value !");
                creationMonthTextfield.setText("");
            }
            creationDayTextfield.getText();
            CDay = Integer.parseInt(creationDayTextfield.getText());
            if (CDay >= 1 && CDay <= 30) {
                this.CDay = CDay;
            } else {
                CDay = 0;
                JOptionPane.showMessageDialog(null, "day must be between 0 and 30 , \n recorrect your value !");
                creationDayTextfield.setText("");
            }
            managedYearTextfield.getText();
            MYear = Integer.parseInt(managedYearTextfield.getText());
            if (MYear >= 1900 && MYear <= 3000) {
                this.MYear = MYear;
            } else {
                MYear = 0;
                JOptionPane.showMessageDialog(null, "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
                managedYearTextfield.setText("");
            }
            managedMonthTextfield.getText();
            MMonth = Integer.parseInt(managedMonthTextfield.getText());
            if (MMonth >= 1 && MMonth <= 12) {
                this.MMonth = MMonth;
            } else {
                MMonth = 0;
                JOptionPane.showMessageDialog(null, "month must be between 1 and 12 , \n recorrect your value !");
                managedMonthTextfield.setText("");
            }
            managedDayTextfield.getText();
            MDay = Integer.parseInt(managedDayTextfield.getText());
            if (MDay >= 1 && MDay <= 30) {
                this.MDay = MDay;
            } else {
                MDay = 0;
                JOptionPane.showMessageDialog(null, "day must be between 0 and 30 , \n recorrect your value !");
                managedDayTextfield.setText("");
            }

            audioDUrationTextfield.getText();
            Duration = Integer.parseInt(audioDUrationTextfield.getText());

            artistAgeTextfield.getText();
            Artistage = Integer.parseInt(artistAgeTextfield.getText());
            creatAudio();
            setVisible(false);
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null , "please enter fields correctly !");
        }




    }

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {

        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("choose directory");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(true);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null ,"selected directory is : " + chooser.getSelectedFile());
            directoryTextfield.setText(chooser.getSelectedFile().getAbsolutePath());
            Address = chooser.getSelectedFile().getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(null , "you chose no directory !!");
        }


    }
    private void formatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
            if (formatComboBox.getSelectedIndex() == 0) {
                audioType = AudioType.M4A;
            }
            else if (formatComboBox.getSelectedIndex() == 1) {
                audioType = AudioType.M4B;
            }
            else if (formatComboBox.getSelectedIndex() == 2) {
                audioType = AudioType.M4P;
            }
            else if (formatComboBox.getSelectedIndex() == 3) {
                audioType = AudioType.MP3;
            }
            else if (formatComboBox.getSelectedIndex() == 4) {
                audioType = AudioType.MPC;
            }
            else if (formatComboBox.getSelectedIndex() == 5) {
                audioType = AudioType.MSV;
            }
            else if (formatComboBox.getSelectedIndex() == 6) {
                audioType = AudioType.AAC;
            }
            else if (formatComboBox.getSelectedIndex() == 7) {
                audioType = AudioType.AAX;
            }
        JOptionPane.showMessageDialog(null , audioType);


    }

    private void fileNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        fileNameTextfield.getText();
        Name = fileNameTextfield.getText();


    }

    private void fileSizeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        fileSizeTextfield.getText();
        Size = Integer.parseInt(fileSizeTextfield.getText());


    }

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        descriptionTextField.getText();
        Descriptions = descriptionTextField.getText();


    }

    private void creationYearTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationYearTextfield.getText();
        CYear = Integer.parseInt(creationYearTextfield.getText());
        if(CYear>=1900 && CYear<=3000)
        {
            this.CYear = CYear;
        }
        else
        {
            CYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            creationYearTextfield.setText("year");
        }


    }

    private void creationMonthTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationMonthTextfield.getText();
        CMonth = Integer.parseInt(creationMonthTextfield.getText());
        if(CMonth>=1 && CMonth<=12)
        {
            this.CMonth = CMonth;
        }
        else
        {
            CMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            creationMonthTextfield.setText("month");
        }


    }

    private void creationDayTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        creationDayTextfield.getText();
        CDay = Integer.parseInt(creationDayTextfield.getText());
        if(CDay >=1 && CDay<=30)
        {
            this.CDay = CDay;
        }
        else
        {
            CDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            creationDayTextfield.setText("day");
        }


    }

    private void managedYearTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedYearTextfield.getText();
        MYear = Integer.parseInt(managedYearTextfield.getText());
        if(MYear>=1900 && MYear<=3000)
        {
            this.MYear = MYear;
        }
        else
        {
            MYear = 0;
            JOptionPane.showMessageDialog(null , "yeear must be betwwen 1900 and 3000 , \n recorrect your entered value !");
            managedYearTextfield.setText("year");
        }


    }
    public boolean status()
    {
        return true;
    }

    private void managedMonthTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedMonthTextfield.getText();
        MMonth = Integer.parseInt(managedMonthTextfield.getText());
        if(MMonth>=1 && MMonth<=12)
        {
            this.MMonth = MMonth;
        }
        else
        {
            MMonth = 0;
            JOptionPane.showMessageDialog(null , "month must be between 1 and 12 , \n recorrect your value !");
            managedMonthTextfield.setText("month");
        }

    }

    private void managedDayTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        managedDayTextfield.getText();
        MDay = Integer.parseInt(managedDayTextfield.getText());
        if(MDay >=1 && MDay<=30)
        {
            this.MDay = MDay;
        }
        else
        {
            MDay = 0;
            JOptionPane.showMessageDialog(null , "day must be between 0 and 30 , \n recorrect your value !");
            managedDayTextfield.setText("day");
        }


    }

    private void directoryTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        directoryTextfield.getText();
        Address = directoryTextfield.getText();


    }

    private void audioDUrationTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        audioDUrationTextfield.getText();
        Duration = Integer.parseInt(audioDUrationTextfield.getText());


    }

    private void artistNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        artistNameTextField.getText();
        Artistname = artistNameTextField.getText();


    }

    private void artistGenderTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        artistGenderTextfield.getText();
        Artistgender = artistGenderTextfield.getText();


    }

    private void artistAgeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        artistAgeTextfield.getText();
        Artistage = Integer.parseInt(artistAgeTextfield.getText());


    }

    private void artistGenreTextfieldActionPerformed(java.awt.event.ActionEvent evt) {
        artistGenreTextfield.getText();
        Artistgenre = artistGenreTextfield.getText();


    }



    private void creatAudio()
    {
        Date cDate = new Date(CDay , CMonth , CYear);
        Date mDate = new Date(MDay , MMonth , MYear);
        Artist artist = new Artist( Artistname , Artistgender , Artistgenre , Artistage);
        Audio audio = new Audio( Name,  audioType,  Descriptions ,  Address,  Size
                ,  cDate,  mDate ,  Duration ,  artist);
        try {
            FileW creator = new FileW(audio.toString(), Address+"/"+Name);
            creator.writeFile();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null , e);;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AudioWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AudioWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AudioWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AudioWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AudioWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel artistAgeLabel;
    private javax.swing.JTextField artistAgeTextfield;
    private javax.swing.JLabel artistDataLabel;
    private javax.swing.JLabel artistGenderLabel;
    private javax.swing.JTextField artistGenderTextfield;
    private javax.swing.JLabel artistGenreLabel;
    private javax.swing.JTextField artistGenreTextfield;
    private javax.swing.JLabel artistNameLabel;
    private javax.swing.JTextField artistNameTextField;
    private javax.swing.JTextField audioDUrationTextfield;
    private javax.swing.JLabel audioDurationLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel creationDateLabel;
    private javax.swing.JTextField creationDayTextfield;
    private javax.swing.JTextField creationMonthTextfield;
    private javax.swing.JTextField creationYearTextfield;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JTextField directoryTextfield;
    private javax.swing.JLabel fileFormatLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextfield;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JTextField fileSizeTextfield;
    private javax.swing.JComboBox<String> formatComboBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel managedDateLabel;
    private javax.swing.JTextField managedDayTextfield;
    private javax.swing.JTextField managedMonthTextfield;
    private javax.swing.JTextField managedYearTextfield;
    private javax.swing.JLabel mbsLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel otherwiseLabel;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JLabel selectFileLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration
}

